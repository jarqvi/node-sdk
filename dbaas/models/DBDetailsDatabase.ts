/**
 * DBaaS
 * Manage your databases using our API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@liara.ir
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DBDetailsDatabaseMetaData } from '../models/DBDetailsDatabaseMetaData';
import { DBDetailsDatabaseNode } from '../models/DBDetailsDatabaseNode';
import { HttpFile } from '../http/http';

export class DBDetailsDatabase {
    /**
    * The ID of the database
    */
    'dBId'?: string;
    /**
    * The type of the database
    */
    'type'?: string;
    /**
    * The plan ID
    */
    'planID'?: string;
    /**
    * The status of the database
    */
    'status'?: string;
    /**
    * The scale of the database
    */
    'scale'?: number;
    /**
    * The hostname of the database
    */
    'hostname'?: string;
    /**
    * Indicates if the database is on a public network
    */
    'publicNetwork'?: boolean;
    /**
    * The database version
    */
    'version'?: string;
    /**
    * The size of the database volume
    */
    'volumeSize'?: number;
    'metaData'?: DBDetailsDatabaseMetaData;
    /**
    * The creation timestamp of the database
    */
    'createdAt'?: string;
    'node'?: DBDetailsDatabaseNode;
    /**
    * The port number for the database connection
    */
    'port'?: number;
    /**
    * The root password for the database
    */
    'rootPassword'?: string;
    /**
    * The internal port of the database
    */
    'internalPort'?: number;
    /**
    * The unique ID of the database
    */
    'id'?: string;
    /**
    * The hourly price of the database
    */
    'hourlyPrice'?: number;
    /**
    * The username associated with the database
    */
    'username'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "dBId",
            "baseName": "DBId",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "planID",
            "baseName": "planID",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "number",
            "format": ""
        },
        {
            "name": "hostname",
            "baseName": "hostname",
            "type": "string",
            "format": ""
        },
        {
            "name": "publicNetwork",
            "baseName": "publicNetwork",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "volumeSize",
            "baseName": "volumeSize",
            "type": "number",
            "format": ""
        },
        {
            "name": "metaData",
            "baseName": "metaData",
            "type": "DBDetailsDatabaseMetaData",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "node",
            "baseName": "node",
            "type": "DBDetailsDatabaseNode",
            "format": ""
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "number",
            "format": ""
        },
        {
            "name": "rootPassword",
            "baseName": "root_password",
            "type": "string",
            "format": ""
        },
        {
            "name": "internalPort",
            "baseName": "internalPort",
            "type": "number",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "hourlyPrice",
            "baseName": "hourlyPrice",
            "type": "number",
            "format": ""
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DBDetailsDatabase.attributeTypeMap;
    }

    public constructor() {
    }
}

