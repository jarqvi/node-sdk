/**
 * PaaS
 * Manage your apps using our API  [wss://api.iran.liara.ir?token=<api-token>&cmd=/bin/bash&project_id=<project-id>]( wss://api.iran.liara.ir?token=<api-token>&cmd=/bin/bash&project_id=<project-id>)  Parameters: - `token`: Your api token in liara - `cmd`: By default /bin/bash - `project_id`: The id of your project in liara  This `WebSocket` endpoint allows `real-time` communication with the projects service hosted at `Liara` You can use `WebSocket protocols` to send and receive data, enabling efficient and low-latency interactions with the projects
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@liara.ir
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ProjectAllDetailsProjectEnvsInner } from '../models/ProjectAllDetailsProjectEnvsInner';
import { ProjectAllDetailsProjectNode } from '../models/ProjectAllDetailsProjectNode';
import { HttpFile } from '../http/http';

export class ProjectAllDetailsProject {
    /**
    * The id of project
    */
    'id'?: string;
    /**
    * The name of project
    */
    'projectId'?: string;
    /**
    * The platform of project
    */
    'type'?: string;
    /**
    * The status of project
    */
    'status'?: string;
    /**
    * The defaultSubdomain status of project
    */
    'defaultSubdomain'?: boolean;
    /**
    * The zeroDowntime status of project
    */
    'zeroDowntime'?: boolean;
    /**
    * The being on of project
    */
    'scale'?: string;
    /**
    * The envs of project
    */
    'envs'?: Array<ProjectAllDetailsProjectEnvsInner>;
    /**
    * The plan of project
    */
    'planID'?: string;
    /**
    * The fixedIPStatus of project
    */
    'fixedIPStatus'?: string;
    /**
    * The time to create of project
    */
    'createdAt'?: string;
    'node'?: ProjectAllDetailsProjectNode;
    /**
    * The hourlyPrice of project
    */
    'hourlyPrice'?: number;
    /**
    * The deployment status of project
    */
    'isDeployed'?: string;
    /**
    * The count reservedDiskSpace of project
    */
    'reservedDiskSpace'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "projectId",
            "baseName": "project_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "defaultSubdomain",
            "baseName": "defaultSubdomain",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "zeroDowntime",
            "baseName": "zeroDowntime",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "string",
            "format": ""
        },
        {
            "name": "envs",
            "baseName": "envs",
            "type": "Array<ProjectAllDetailsProjectEnvsInner>",
            "format": ""
        },
        {
            "name": "planID",
            "baseName": "planID",
            "type": "string",
            "format": ""
        },
        {
            "name": "fixedIPStatus",
            "baseName": "fixedIPStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "node",
            "baseName": "node",
            "type": "ProjectAllDetailsProjectNode",
            "format": ""
        },
        {
            "name": "hourlyPrice",
            "baseName": "hourlyPrice",
            "type": "number",
            "format": ""
        },
        {
            "name": "isDeployed",
            "baseName": "isDeployed",
            "type": "string",
            "format": ""
        },
        {
            "name": "reservedDiskSpace",
            "baseName": "reservedDiskSpace",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProjectAllDetailsProject.attributeTypeMap;
    }

    public constructor() {
    }
}

