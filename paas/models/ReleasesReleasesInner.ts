/**
 * PaaS
 * Manage your apps using our API  [wss://api.iran.liara.ir?token=<api-token>&cmd=/bin/bash&project_id=<project-id>]( wss://api.iran.liara.ir?token=<api-token>&cmd=/bin/bash&project_id=<project-id>)  Parameters: - `token`: Your api token in liara - `cmd`: By default /bin/bash - `project_id`: The id of your project in liara  This `WebSocket` endpoint allows `real-time` communication with the projects service hosted at `Liara` You can use `WebSocket protocols` to send and receive data, enabling efficient and low-latency interactions with the projects
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@liara.ir
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ReleasesReleasesInner {
    /**
    * The id of release
    */
    'id'?: string;
    /**
    * The type of release
    */
    'type'?: string;
    /**
    * The imageName of release
    */
    'imageName'?: string;
    /**
    * The projectType of release
    */
    'projectType'?: string;
    /**
    * The state of release
    */
    'state'?: string;
    /**
    * The port of release
    */
    'port'?: number;
    /**
    * The gitInfo of release
    */
    'gitInfo'?: any;
    /**
    * The client of release
    */
    'client'?: string;
    /**
    * The finishedAt of release
    */
    'finishedAt'?: string;
    /**
    * The createdAt of release
    */
    'createdAt'?: string;
    /**
    * The tag of release
    */
    'tag'?: string;
    /**
    * The sourceAvailable of release
    */
    'sourceAvailable'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "imageName",
            "baseName": "imageName",
            "type": "string",
            "format": ""
        },
        {
            "name": "projectType",
            "baseName": "projectType",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        },
        {
            "name": "port",
            "baseName": "port",
            "type": "number",
            "format": ""
        },
        {
            "name": "gitInfo",
            "baseName": "gitInfo",
            "type": "any",
            "format": ""
        },
        {
            "name": "client",
            "baseName": "client",
            "type": "string",
            "format": ""
        },
        {
            "name": "finishedAt",
            "baseName": "finishedAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "tag",
            "baseName": "tag",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceAvailable",
            "baseName": "sourceAvailable",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ReleasesReleasesInner.attributeTypeMap;
    }

    public constructor() {
    }
}

